{"version":3,"sources":["modules/login/views/Login.js"],"names":["Login","props","t","useTranslation","loading","login","className","width","src","logo","alt","name","onSubmit","e","type","placeholder","validate","validations","disabled","defaultProps","response","error","connect","state","dispatch","credentials"],"mappings":"4KAAA,uFAuBMA,GAvBN,QAuBc,SAAAC,GAAU,IACdC,EAAMC,2BAAND,EACAE,EAAmBH,EAAnBG,QAASC,EAAUJ,EAAVI,MAMjB,OACE,kBAAC,eAAD,KACE,yBAAKC,UAAU,cACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,yBACEA,UAAU,gCACVC,MAAM,MACNC,IAAKC,IACLC,IAAI,iBAIV,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,0BACXJ,EAAE,0BAIT,yBAAKI,UAAU,8BACb,yBAAKA,UAAU,aACb,kBAAC,YAAD,CAAWK,KAAK,YAAYC,SA7BtB,SAAAC,GACpBR,EAAMQ,KA6BU,yBAAKP,UAAU,YACb,yBAAKA,UAAU,wBACb,kBAAC,YAAD,CACEK,KAAK,WACLL,UAAU,eACVQ,KAAK,OACLC,YAAab,EACX,4CAEFc,SAAU,CACRC,WACAA,QACAA,mBAKR,yBAAKX,UAAU,YACb,yBAAKA,UAAU,wBACb,kBAAC,YAAD,CACEK,KAAK,WACLL,UAAU,eACVQ,KAAK,WACLC,YAAab,EACX,4CAEFc,SAAU,CACRC,WACAA,aACAA,mBAKR,yBAAKX,UAAU,YACb,yBAAKA,UAAU,wBACb,kBAAC,cAAD,CACEA,UAAU,4BACVF,QAASA,EACTc,SAAUd,EACVU,KAAK,UAEJZ,EAAE,2CAgD7BF,EAAMmB,aAAe,CACnBf,SAAS,EACTgB,SAAU,KACVC,MAAO,MAGMC,6BAvCS,SAAAC,GACtB,MAAO,CACLH,SAAUG,EAAMlB,MAAMe,SACtBhB,QAASmB,EAAMlB,MAAMD,QACrBiB,MAAOE,EAAMlB,MAAMgB,UAII,SAAAG,GACzB,MAAO,CACLnB,MAAO,SAAAoB,GAAW,OAAID,EAASnB,YAAMoB,QA6B1BH,CAA6CtB","file":"static/js/4.32131072.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  ACSHBSection,\r\n  ACSHBForm,\r\n  FormField,\r\n  ACSHBButton\r\n} from \"acshb-react-common/components\";\r\nimport * as validations from \"acshb-react-common/utils/validation\";\r\nimport { login } from \"../business/action\";\r\nimport logo from \"../../../assets/armali-logo-tr.svg\";\r\nimport \"./style.scss\";\r\n\r\n/**\r\n * Login modülü.\r\n *\r\n * @param {func}    login     Redux login methodu credential bilgilerini parametre alarak login işlemini başlatır\r\n * @param {boolean} loading   Redux post operasyonu başladığında http durumunu takip etmek için kullanılır.\r\n * @param {object}  response   Login post operasyonundan dönecek objedir.\r\n * @param {object}  error      Login post operasyonunda bir hata meydana geldiğinde ulaşılabilecek hata nesnesi.\r\n */\r\nconst Login = props => {\r\n  const { t } = useTranslation();\r\n  const { loading, login } = props;\r\n\r\n  const onLoginSubmit = e => {\r\n    login(e);\r\n  };\r\n\r\n  return (\r\n    <ACSHBSection>\r\n      <div className=\"login-view\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center align-items-center\">\r\n            <div className=\"col-md-8 bg-white border shadow jumbotron\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <img\r\n                    className=\"img-responsive d-block m-auto\"\r\n                    width=\"250\"\r\n                    src={logo}\r\n                    alt=\"Login Logo\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col text-center\">\r\n                  <h2 className=\"font-weight-light mb-5\">\r\n                    {t(\"modules.login.title\")}\r\n                  </h2>\r\n                </div>\r\n              </div>\r\n              <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-10\">\r\n                  <ACSHBForm name=\"loginForm\" onSubmit={onLoginSubmit}>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-12\">\r\n                        <FormField\r\n                          name=\"username\"\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          placeholder={t(\r\n                            \"modules.login.input-username-placeholder\"\r\n                          )}\r\n                          validate={[\r\n                            validations.required,\r\n                            validations.email,\r\n                            validations.maxLength32\r\n                          ]}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-12\">\r\n                        <FormField\r\n                          name=\"password\"\r\n                          className=\"form-control\"\r\n                          type=\"password\"\r\n                          placeholder={t(\r\n                            \"modules.login.input-password-placeholder\"\r\n                          )}\r\n                          validate={[\r\n                            validations.required,\r\n                            validations.minLength2,\r\n                            validations.maxLength32\r\n                          ]}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                      <div className=\"form-group col-md-12\">\r\n                        <ACSHBButton\r\n                          className=\"btn btn-primary btn-block\"\r\n                          loading={loading}\r\n                          disabled={loading}\r\n                          type=\"submit\"\r\n                        >\r\n                          {t(\"modules.login.button-title\")}\r\n                        </ACSHBButton>\r\n                      </div>\r\n                    </div>\r\n                  </ACSHBForm>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ACSHBSection>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    response: state.login.response,\r\n    loading: state.login.loading,\r\n    error: state.login.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    login: credentials => dispatch(login(credentials))\r\n  };\r\n};\r\n\r\nLogin.propTypes = {\r\n  /**\r\n   * redux login methodu.\r\n   */\r\n  login: PropTypes.func,\r\n  /**\r\n   * redux login işlemi sürüyor mu?\r\n   */\r\n  loading: PropTypes.bool,\r\n  /**\r\n   * Login post response.\r\n   */\r\n  response: PropTypes.object,\r\n  /**\r\n   * Login post işleminde hata var ise hata obejesi.\r\n   */\r\n  error: PropTypes.object\r\n};\r\n\r\nLogin.defaultProps = {\r\n  loading: false,\r\n  response: null,\r\n  error: null\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"],"sourceRoot":""}