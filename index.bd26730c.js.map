{"mappings":"ACCE,OAAO,MAAM,CAAG,KACd,IAAM,EAAS,SAAS,cAAc,CAAC,UACjC,EAAM,EAAO,UAAU,CAAC,MACxB,EAAQ,EAAE,CACV,EAAW,SAAS,cAAc,CAAC,YACnC,EAAc,SAAS,cAAc,CAAC,UACtC,EAAc,SAAS,cAAc,CAAC,gBACxC,EAAe,AAA8C,SAA9C,EAAY,YAAY,CAAC,iBAkC5C,SAAS,IACP,EAAe,CAAC,EAChB,EAAY,YAAY,CAAC,gBAAiB,GAEtC,GACF,EAAY,aAAa,CAAC,KAAK,SAAS,CAAC,MAAM,CAAC,qBAChD,EAAY,aAAa,CAAC,KAAK,SAAS,CAAC,GAAG,CAAC,sBAC7C,EAAS,KAAK,CAAG,CAAA,EACjB,EAAY,KAAK,CAAG,CAAA,EACpB,EAAS,IAAI,KAEb,EAAY,aAAa,CAAC,KAAK,SAAS,CAAC,MAAM,CAAC,sBAChD,EAAY,aAAa,CAAC,KAAK,SAAS,CAAC,GAAG,CAAC,qBAC7C,EAAS,KAAK,CAAG,CAAA,EACjB,EAAY,KAAK,CAAG,CAAA,EAExB,CAEA,SAAS,IACH,IACF,EAAY,WAAW,CAAG,EAC1B,EAAY,IAAI,GAEpB,EAgDA,AAvGA,WACE,GAAI,CACF,AAuDJ,CAAA,WACE,IAAK,IAAI,EAAI,EAAG,EAAI,IAAK,IACvB,EAAM,IAAI,CAOL,CACL,EAAG,KAAK,MAAM,GAAK,EAAO,KAAK,CAC/B,EAAG,KAAK,MAAM,GAAK,EAAO,MAAM,CAChC,OAAQ,AAAgB,EAAhB,KAAK,MAAM,GACnB,MAAO,AAAgB,EAAhB,KAAK,MAAM,EACpB,GATA,AAmCF,CAAA,SAAS,IAtBP,EAAI,SAAS,CAAC,EAAG,EAAG,EAAO,KAAK,CAAE,EAAO,MAAM,EAC/C,EAAI,WAAW,CAAG,sBAClB,EAAI,SAAS,CAAG,IAEhB,EAAM,OAAO,CAAC,AAAC,IACb,EAAI,SAAS,GACb,EAAI,MAAM,CAAC,EAAK,CAAC,CAAE,EAAK,CAAC,EACzB,EAAI,MAAM,CAAC,EAAK,CAAC,CAAE,EAAK,CAAC,CAAG,EAAK,MAAM,EACvC,EAAI,MAAM,EACZ,GAIA,EAAM,OAAO,CAAC,AAAC,IACb,EAAK,CAAC,EAAI,EAAK,KAAK,CAChB,EAAK,CAAC,CAAG,EAAO,MAAM,GACxB,EAAK,CAAC,CAAG,CAAC,EAAK,MAAM,CACrB,EAAK,CAAC,CAAG,KAAK,MAAM,GAAK,EAAO,KAAK,CAEzC,GAMA,sBAAsB,EACxB,CAAA,GAtCA,CAAA,IA5DI,AAWJ,WACE,IAAM,EAAU,SAAS,cAAc,CAAC,cAClC,EAAO,EAAQ,SAAS,AAC9B,CAAA,EAAQ,SAAS,CAAG,GACpB,IAAI,EAAQ,EACN,EAAW,IAAO,EAAK,MAAM,EAUnC,AARA,SAAS,IACH,EAAQ,EAAK,MAAM,GACrB,EAAQ,SAAS,EAAI,EAAK,MAAM,CAAC,GACjC,IACA,WAAW,EAAM,GAErB,GAGF,IAzBI,EAAY,gBAAgB,CAAC,QAAS,GACtC,SAAS,gBAAgB,CAAC,gBAAgB,OAAO,CAAC,AAAC,IACjD,EAAK,gBAAgB,CAAC,aAAc,EACtC,EACF,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,sBAAuB,EACvC,CACF,GA4FF","sources":["<anon>","assets/scripts/index.js"],"sourcesContent":["(function() {\n    window.onload = ()=>{\n        const canvas = document.getElementById(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        const drops = [];\n        const ambience = document.getElementById(\"ambience\");\n        const audioSelect = document.getElementById(\"select\");\n        const audioSwitch = document.getElementById(\"audio-switch\");\n        let audioCanPlay = audioSwitch.getAttribute(\"data-can-play\") === \"true\";\n        function init() {\n            try {\n                playAnimation();\n                typewriterAnimation();\n                audioSwitch.addEventListener(\"click\", onSoundSwitchToogled);\n                document.querySelectorAll(\".social-link\").forEach((link)=>{\n                    link.addEventListener(\"mouseenter\", onCocialMediaLinkHovered);\n                });\n            } catch (error) {\n                console.error(\"An error occurred: \", error);\n            }\n        }\n        function typewriterAnimation() {\n            const element = document.getElementById(\"typewriter\");\n            const text = element.innerHTML;\n            element.innerHTML = \"\";\n            let index = 0;\n            const interval = 2000 / text.length; // 2 seconds divided by the length of the text\n            function type() {\n                if (index < text.length) {\n                    element.innerHTML += text.charAt(index);\n                    index++;\n                    setTimeout(type, interval);\n                }\n            }\n            type();\n        }\n        function onSoundSwitchToogled() {\n            audioCanPlay = !audioCanPlay;\n            audioSwitch.setAttribute(\"data-can-play\", audioCanPlay);\n            if (audioCanPlay) {\n                audioSwitch.querySelector(\"i\").classList.remove(\"iconoir-sound-off\");\n                audioSwitch.querySelector(\"i\").classList.add(\"iconoir-sound-high\");\n                ambience.muted = false;\n                audioSelect.muted = false;\n                ambience.play();\n            } else {\n                audioSwitch.querySelector(\"i\").classList.remove(\"iconoir-sound-high\");\n                audioSwitch.querySelector(\"i\").classList.add(\"iconoir-sound-off\");\n                ambience.muted = true;\n                audioSwitch.muted = true;\n            }\n        }\n        function onCocialMediaLinkHovered() {\n            if (audioCanPlay) {\n                audioSelect.currentTime = 0;\n                audioSelect.play();\n            }\n        }\n        function playAnimation() {\n            for(let i = 0; i < 200; i++)drops.push(createDrop());\n            animate();\n        }\n        function createDrop() {\n            return {\n                x: Math.random() * canvas.width,\n                y: Math.random() * canvas.height,\n                length: Math.random() * 1,\n                speed: Math.random() * 1\n            };\n        }\n        function drawDrops() {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.strokeStyle = \"rgba(0, 131, 12, 1)\";\n            ctx.lineWidth = 0.25;\n            drops.forEach((drop)=>{\n                ctx.beginPath();\n                ctx.moveTo(drop.x, drop.y);\n                ctx.lineTo(drop.x, drop.y + drop.length);\n                ctx.stroke();\n            });\n        }\n        function updateDrops() {\n            drops.forEach((drop)=>{\n                drop.y += drop.speed;\n                if (drop.y > canvas.height) {\n                    drop.y = -drop.length;\n                    drop.x = Math.random() * canvas.width;\n                }\n            });\n        }\n        function animate() {\n            drawDrops();\n            updateDrops();\n            requestAnimationFrame(animate);\n        }\n        init();\n    };\n})();\n\n//# sourceMappingURL=index.bd26730c.js.map\n","(function () {\n  window.onload = () => {\n    const canvas = document.getElementById(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const drops = [];\n    const ambience = document.getElementById(\"ambience\");\n    const audioSelect = document.getElementById(\"select\");\n    const audioSwitch = document.getElementById(\"audio-switch\");\n    let audioCanPlay = audioSwitch.getAttribute(\"data-can-play\") === \"true\";\n\n    function init() {\n      try {\n        playAnimation();\n        typewriterAnimation();\n\n        audioSwitch.addEventListener(\"click\", onSoundSwitchToogled);\n        document.querySelectorAll(\".social-link\").forEach((link) => {\n          link.addEventListener(\"mouseenter\", onCocialMediaLinkHovered);\n        });\n      } catch (error) {\n        console.error(\"An error occurred: \", error);\n      }\n    }\n\n    function typewriterAnimation() {\n      const element = document.getElementById(\"typewriter\");\n      const text = element.innerHTML;\n      element.innerHTML = \"\";\n      let index = 0;\n      const interval = 2000 / text.length; // 2 seconds divided by the length of the text\n\n      function type() {\n        if (index < text.length) {\n          element.innerHTML += text.charAt(index);\n          index++;\n          setTimeout(type, interval);\n        }\n      }\n\n      type();\n    }\n\n    function onSoundSwitchToogled() {\n      audioCanPlay = !audioCanPlay;\n      audioSwitch.setAttribute(\"data-can-play\", audioCanPlay);\n\n      if (audioCanPlay) {\n        audioSwitch.querySelector(\"i\").classList.remove(\"iconoir-sound-off\");\n        audioSwitch.querySelector(\"i\").classList.add(\"iconoir-sound-high\");\n        ambience.muted = false;\n        audioSelect.muted = false;\n        ambience.play();\n      } else {\n        audioSwitch.querySelector(\"i\").classList.remove(\"iconoir-sound-high\");\n        audioSwitch.querySelector(\"i\").classList.add(\"iconoir-sound-off\");\n        ambience.muted = true;\n        audioSwitch.muted = true;\n      }\n    }\n\n    function onCocialMediaLinkHovered() {\n      if (audioCanPlay) {\n        audioSelect.currentTime = 0;\n        audioSelect.play();\n      }\n    }\n\n    function playAnimation() {\n      for (let i = 0; i < 200; i++) {\n        drops.push(createDrop());\n      }\n\n      animate();\n    }\n\n    function createDrop() {\n      return {\n        x: Math.random() * canvas.width,\n        y: Math.random() * canvas.height,\n        length: Math.random() * 1,\n        speed: Math.random() * 1,\n      };\n    }\n\n    function drawDrops() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.strokeStyle = \"rgba(0, 131, 12, 1)\";\n      ctx.lineWidth = 0.25;\n\n      drops.forEach((drop) => {\n        ctx.beginPath();\n        ctx.moveTo(drop.x, drop.y);\n        ctx.lineTo(drop.x, drop.y + drop.length);\n        ctx.stroke();\n      });\n    }\n\n    function updateDrops() {\n      drops.forEach((drop) => {\n        drop.y += drop.speed;\n        if (drop.y > canvas.height) {\n          drop.y = -drop.length;\n          drop.x = Math.random() * canvas.width;\n        }\n      });\n    }\n\n    function animate() {\n      drawDrops();\n      updateDrops();\n      requestAnimationFrame(animate);\n    }\n\n    init();\n  };\n})();\n"],"names":["window","onload","canvas","document","getElementById","ctx","getContext","drops","ambience","audioSelect","audioSwitch","audioCanPlay","getAttribute","onSoundSwitchToogled","setAttribute","querySelector","classList","remove","add","muted","play","onCocialMediaLinkHovered","currentTime","init","playAnimation","i","push","x","Math","random","width","y","height","length","speed","animate","clearRect","strokeStyle","lineWidth","forEach","drop","beginPath","moveTo","lineTo","stroke","requestAnimationFrame","typewriterAnimation","element","text","innerHTML","index","interval","type","charAt","setTimeout","addEventListener","querySelectorAll","link","error","console"],"version":3,"file":"index.bd26730c.js.map"}