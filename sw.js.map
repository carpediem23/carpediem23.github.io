{"mappings":"C,A,WCAA,IAAM,EAAa,iBAEf,EAAc,EAAE,CAEpB,KAAK,gBAAgB,CAAC,UAAW,AAAC,IAChC,EAAM,SAAS,CACb,OAAO,IAAI,CAAC,GAAY,IAAI,CAAC,AAAC,GACrB,EAAM,MAAM,CAAC,GAAa,KAAK,CAAC,AAAC,IAEtC,MADA,QAAQ,KAAK,CAAC,sBAAuB,GAC/B,CACR,IAGN,GAEA,KAAK,gBAAgB,CAAC,WAAY,AAAC,IACjC,EAAM,SAAS,CACb,OAAO,IAAI,GAAG,IAAI,CAAC,AAAC,GACX,QAAQ,GAAG,CAChB,EACG,MAAM,CAAC,AAAC,GAAS,IAAS,GAC1B,GAAG,CAAC,AAAC,GAAS,OAAO,MAAM,CAAC,MAIvC,GAEA,KAAK,gBAAgB,CAAC,QAAS,AAAC,IAC9B,EAAM,WAAW,CACf,OACG,KAAK,CAAC,EAAM,OAAO,EACnB,IAAI,CAAC,AAAC,GAAa,GAAY,MAAM,EAAM,OAAO,GAEzD,GAEA,KAAK,gBAAgB,CAAC,UAAW,AAAC,IACR,eAApB,EAAM,IAAI,CAAC,IAAI,EACjB,CAAA,EAAc,EAAM,IAAI,CAAC,IAAI,AAAJ,CAE7B,E","sources":["<anon>","sw.js"],"sourcesContent":["(function () {\nvar $59bef25b10311137$exports = {};\nconst $59bef25b10311137$var$CACHE_NAME = \"carpediem23-v1\";\nlet $59bef25b10311137$var$urlsToCache = [];\nself.addEventListener(\"install\", (event)=>{\n    event.waitUntil(caches.open($59bef25b10311137$var$CACHE_NAME).then((cache)=>{\n        return cache.addAll($59bef25b10311137$var$urlsToCache).catch((error)=>{\n            console.error(\"Cache addAll error:\", error);\n            throw error;\n        });\n    }));\n});\nself.addEventListener(\"activate\", (event)=>{\n    event.waitUntil(caches.keys().then((cacheNames)=>{\n        return Promise.all(cacheNames.filter((name)=>name !== $59bef25b10311137$var$CACHE_NAME).map((name)=>caches.delete(name)));\n    }));\n});\nself.addEventListener(\"fetch\", (event)=>{\n    event.respondWith(caches.match(event.request).then((response)=>response || fetch(event.request)));\n});\nself.addEventListener(\"message\", (event)=>{\n    if (event.data.type === \"CACHE_URLS\") $59bef25b10311137$var$urlsToCache = event.data.urls;\n});\n\n})();\n//# sourceMappingURL=sw.js.map\n","const CACHE_NAME = \"carpediem23-v1\";\n\nlet urlsToCache = [];\n\nself.addEventListener(\"install\", (event) => {\n  event.waitUntil(\n    caches.open(CACHE_NAME).then((cache) => {\n      return cache.addAll(urlsToCache).catch((error) => {\n        console.error(\"Cache addAll error:\", error);\n        throw error;\n      });\n    }),\n  );\n});\n\nself.addEventListener(\"activate\", (event) => {\n  event.waitUntil(\n    caches.keys().then((cacheNames) => {\n      return Promise.all(\n        cacheNames\n          .filter((name) => name !== CACHE_NAME)\n          .map((name) => caches.delete(name))\n      );\n    })\n  );\n});\n\nself.addEventListener(\"fetch\", (event) => {\n  event.respondWith(\n    caches\n      .match(event.request)\n      .then((response) => response || fetch(event.request)),\n  );\n});\n\nself.addEventListener(\"message\", (event) => {\n  if (event.data.type === \"CACHE_URLS\") {\n    urlsToCache = event.data.urls;\n  }\n});"],"names":["$59bef25b10311137$var$CACHE_NAME","$59bef25b10311137$var$urlsToCache","self","addEventListener","event","waitUntil","caches","open","then","cache","addAll","catch","error","console","keys","cacheNames","Promise","all","filter","name","map","delete","respondWith","match","request","response","fetch","data","type","urls"],"version":3,"file":"sw.js.map"}